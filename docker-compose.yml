version: '3'

services:
  bingo-server:
    container_name: bingo-server
    image: bingo-server
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./api.Dockerfile
    ports:
      - 3010:3010
    networks:
      - bingo-net
  bingo-db:
    container_name: bingo-db
    image: postgres:14-alpine
    restart: unless-stopped
    volumes:
      - "${DB_PATH}:/var/lib/postgresql/data"
    environment:
      - POSTGRES_USER="${DB_USER}"
      - POSTGRES_PASSWORD="${DB_PASSWORD}"
    ports:
      - 5432:5432
    networks:
      - bingo-net
  bingo-nginx:
    container_name: bingo-nginx
    image: nginx:mainline-alpine
    depends_on:
      - bingo-server
    restart: unless-stopped
    volumes:
      - ./nginx/:/etc/nginx/conf.d/:ro
      - certbot:/etc/letsencrypt:ro
      - webroot:/var/www/html:ro
    ports:
      - 80:80
      - 443:443
    networks:
      - bingo-net
  bingo-certbot:
    container_name: bingo-certbot
    image: certbot/certbot:latest
    depends_on:
      - bingo-nginx
    volumes:
      - certbot:/etc/letsencrypt
      - webroot:/var/www/html
    command: certonly --webroot -w /var/www/html --email ${CERTBOT_EMAIL} -d ${APP_HOST} --staging --agree-tos

volumes:
  certbot: ./runtime/certbot
  webroot: ./runtime/webroot

networks:
  bingo-net:
    driver: bridge